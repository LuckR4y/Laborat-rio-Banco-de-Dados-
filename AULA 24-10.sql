/* 24/10- Exemplo de declaração de um gatilho */
	CREATE OR REPLACE TRIGGER TESTE
	AFTER INSERT ON Aluno
	FOR EACH ROW
	BEGIN
	--instrução
	END;
				
	/*Exemplo de gatilho 
		1) gatilho para gerenciar backup online*/
		
	CREATE TABLE ALUNOBKP
		AS SELECT * FROM ALUNO;
	
	CREATE OR REPLACE TRIGGER ALUNOBKP
	AFTER INSERT OR UPDATE OR DELETE ON ALUNO
	FOR EACH ROW 
	BEGIN 
	IF INSERTING THEN 
		INSERT INTO ALUNOBKP(ID_ALUNO, NOM_ALUNO, DTN_ALUNO) VALUES(:NEW.ID_ALUNO, :NEW.NOM_ALUNO, :NEW.DTN_ALUNO);
	ELSIF UPDATING THEN
	UPDATE ALUNOBKP SET ID_ALUNO = :NEW.ID_ALUNO, NOM_ALUNO = :NEW.NOM_ALUNO, DTN_ALUNO = :NEW.DTN_ALUNO
	WHERE ID_ALUNO = :OLD.ID_ALUNO;
	ELSE
		DELETE ALUNOBKP WHERE ID_ALUNO = :OLD.ID_ALUNO;
	END IF;
	END;
	
	
	-- SHOW ERRORS
	/*UTILIZADO QUANDO SE DESEJA IDENTIFICAR QUAIS POSSIVEIS ERROS QUANDO O GATILHO É CRIADO COM ERROS DE COMPILAÇÃO*/
	
	INSERT INTO ALUNO VALUES(61, 'Arthur Vital Fontana', TO_DATE('06/06/2005', 'DD/MM/YYYY'));
	
	SELECT * FROM ALUNO;
	
	SELECT * FROM ALUNOBKP;
	
	UPDATE ALUNO SET NOM_ALUNO = 'Leila Rafael Mele' WHERE ID_ALUNO = 6;
	DELETE ALUNO WHERE ID_ALUNO = 3;
	
	SELECT * FROM ALUNO ORDER BY ID_ALUNO;
	SELECT * FROM ALUNOBKP ORDER BY ID_ALUNO;
	
	/*2) Gatilho para gerenciar auditoria na tabela ALUNO*/
	CREATE TABLE AUDITORIA_ALUNO
	(ID_AUDITORIA_ALUNO NUMBER(5),
	N_ID NUMBER(5),
	N_NOM_ALUNO VARCHAR2(40),
	N_DTN_ALUNO DATE,
	V_ID_ALUNO NUMBER(5),
	V_NOM_ALUNO VARCHAR2(40),
	V_DTN_ALUNO DATE,
	CONSTRAINT PK_AUDITORIA_ALUNO PRIMARY KEY(ID_AUDITORIA_ALUNO));
	
	CREATE SEQUENCE ID_AUDITORIA_ALUNO
	START WITH 1
	INCREMENT BY 1;
	
	CREATE OR REPLACE TRIGGER AUDIT_ALUNO
	AFTER INSERT OR UPDATE OR DELETE ON ALUNO
	FOR EACH ROW
	BEGIN
	INSERT INTO AUDITORIA_ALUNO VALUES (ID_AUDITORIA_ALUNO.NEXTVAL,
										:NEW.ID_ALUNO,
										:NEW.NOM_ALUNO,
										:NEW.DTN_ALUNO,
										:OLD.ID_ALUNO,
										:OLD.NOM_ALUNO,
										:OLD.DTN_ALUNO);
	END;
	
	INSERT INTO ALUNO(ID_ALUNO, NOM_ALUNO, DTN_ALUNO) VALUES(63, 'Joao Henrique CIT', TO_DATE('20/11/2003', 'DD/MM/YYYY'));
	
	UPDATE ALUNO SET NOM_ALUNO = 'Joao Henrique do CIT' WHERE ID_ALUNO = 63;
	
	INSERT INTO ALUNO(ID_ALUNO, NOM_ALUNO, DTN_ALUNO) VALUES(64, 'FRAGA FRAGADOR DE FRAGA', TO_DATE('10/01/2005', 'DD/MM/YYYY'));
	DELETE FROM ALUNO WHERE ID_ALUNO = 63;
	
	SELECT * FROM AUDITORIA_ALUNO;
	
	/*3) gatilho para registrar o conceito a partir de uma nota*/
	CREATE TABLE CONCURSO
	(NUM_CONCURSO NUMBER(4),
	NUM_INSCRITO NUMBER(5),
	NOT_CONCURSO NUMBER(3,1),
	RES_CONCURSO VARCHAR2(10),
	CONSTRAINT PK_CONCURSO PRIMARY KEY (NUM_CONCURSO, NUM_INSCRITO));
	
	/*Regra de negocio 
	Para estar aprovado o candidato precisa ter nota >= 7 */
	
	CREATE OR REPLACE TRIGGER RES_CONCURSO
	BEFORE INSERT OR UPDATE ON CONCURSO 
	FOR EACH ROW 
	BEGIN
	IF (:NEW.NOT_CONCURSO >= 7) THEN 
		:NEW.RES_CONCURSO := 'Aprovado';
	ELSE 
		:NEW.RES_CONCURSO := 'Reprovado';
	END IF;
	END;
	
	INSERT INTO CONCURSO (NUM_CONCURSO, NUM_INSCRITO, NOT_CONCURSO) VALUES (1,1,1);
	INSERT INTO CONCURSO (NUM_CONCURSO, NUM_INSCRITO, NOT_CONCURSO) VALUES (1,2,5);
	INSERT INTO CONCURSO (NUM_CONCURSO, NUM_INSCRITO, NOT_CONCURSO) VALUES (1,3,7);
	INSERT INTO CONCURSO (NUM_CONCURSO, NUM_INSCRITO, NOT_CONCURSO, RES_CONCURSO) VALUES (1,4,3,'Aprovado');
	
	SELECT * FROM CONCURSO;
	
	COMMIT;
